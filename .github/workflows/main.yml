name: Build
on:
  push:
    branches:
      - master

env:
  FFMPEG_VERSION: "3.0.2"

jobs:
  build:
    name: Build
    runs-on: ubuntu-18.04
    steps:
      - name: Check out code
        uses: actions/checkout@v1

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15.6

      - name: Cache FFmpeg
        uses: actions/cache@v2
        id: cache_ffmpeg
        with:
          path: |
            ~/ffmpeg-${{ env.FFMPEG_VERSION }}
          key: ${{ runner.os }}-ffmpeg-${{ env.FFMPEG_VERSION }}

      - name: Build FFmpeg
        if: steps.cache_ffmpeg.outputs.cache-hit != 'true'
        uses: ./.github/actions/build_ffmpeg
        with:
          ffmpeg_version: ${{ env.FFMPEG_VERSION }}

      - name: Install FFmpeg
        run: cd ~/ffmpeg-${{ env.FFMPEG_VERSION }} && sudo make install

      # - name: Setup Debug Session
      #   uses: P3TERX/ssh2actions@main
      #   env:
      #     TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      #     TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

      - name: Cache GO MOD
        uses: actions/cache@v2
        id: cache_gomod
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Create release
        uses: goreleaser/goreleaser-action@v2
        with:
          args: release --snapshot --skip-publish --rm-dist
        env:
          GITHUB_TOKEN: ${{secrets.RELESE_TOEN}}
