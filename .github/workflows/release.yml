name: Release
on:
  create:
    tags:
      - v*

env:
  FFMPEG_VERSION: "3.0.2"

jobs:
  goreleaser:
    name: Release on GitHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_HUB_TOKER }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.RELESE_TOEN }}

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15.6

      - name: Cache FFmpeg
        uses: actions/cache@v2
        id: cache_ffmpeg
        with:
          path: |
            ~/ffmpeg-${{ env.FFMPEG_VERSION }}
          key: ${{ runner.os }}-ffmpeg-${{ env.FFMPEG_VERSION }}-${{ hashFiles('**/.github/actions/build_ffmpeg') }}

      - name: Build FFmpeg
        if: steps.cache_ffmpeg.outputs.cache-hit != 'true'
        uses: ./.github/actions/build_ffmpeg
        with:
          ffmpeg_version: ${{ env.FFMPEG_VERSION }}

      - name: Install FFmpeg
        run: cd ~/ffmpeg-${{ env.FFMPEG_VERSION }} && sudo make install

      - name: Cache GO MOD
        uses: actions/cache@v2
        id: cache_gomod
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Create release on GitHub
        uses: goreleaser/goreleaser-action@v2
        with:
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{secrets.RELESE_TOEN}}

      - name: Clear
        if: always()
        run: |
          rm -f ${HOME}/.docker/config.json
